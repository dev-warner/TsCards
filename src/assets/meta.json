{"posts":[{"label":"Binary Search","type":"Algorithm","category":"Divide and conquer","time":"O(log n)","space":"O(1)","summary":"Binary search works on sorted arrays. Binary search begins by comparing the middle element of the array with the target value.","path":"/algorithms/binary-search","image":"/assets/backgrounds/0.png"},{"label":"Stack","type":"Data Type","category":"Abstract Data Type","summary":"Stacks. A stack is a container of objects that are inserted and removed according to the last-in first-out (LIFO) principle.","path":"/data-structures/stack","image":"/assets/backgrounds/1.png"}],"social":[{"label":"github","link":"https://github.com/dev-warner/TsCards"},{"label":"stackoverflow","link":"https://stackoverflow.com/story/dev-warner"},{"label":"twitter","link":"https://twitter.com/dev_warner"},{"label":"linkedin","link":"https://www.linkedin.com/in/joe-warner-900ba5b4/"}],"categorys":[{"label":"Algorithms","links":[{"label":"Brute force","count":0},{"label":"Divide and conquer","count":1},{"label":"Decrease and conquer","count":0},{"label":"Dynamic programming","count":0},{"label":"Greedy algorithm","count":0},{"label":"Transform and conquer","count":0},{"label":"Backtracking algorithm","count":0}]},{"label":"Data Structures","links":[{"label":"Primitive types","count":0},{"label":"Abstract data types","count":1},{"label":"Composite types or non-primitive type","count":0},{"label":"Linear data structures","count":0},{"label":"Trees","count":0},{"label":"Hash-based structures","count":0},{"label":"Graphs","count":0}]},{"label":"Resources","links":[{"link":"https://github.com/basarat/algorithms","author":"basarat","label":"algorithms"}]}]}